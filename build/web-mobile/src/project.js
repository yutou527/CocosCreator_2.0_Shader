window.__require=function t(e,n,r){function i(o,s){if(!n[o]){if(!e[o]){var c=o.split("/");if(c=c[c.length-1],!e[c]){var l="function"==typeof __require&&__require;if(!s&&l)return l(c,!0);if(a)return a(c,!0);throw new Error("Cannot find module '"+o+"'")}}var u=n[o]={exports:{}};e[o][0].call(u.exports,function(t){return i(e[o][1][t]||t)},u,u.exports,t,e,n,r)}return n[o].exports}for(var a="function"==typeof __require&&__require,o=0;o<r.length;o++)i(r[o]);return i}({FluxyMaterial:[function(t,e,n){"use strict";cc._RF.push(e,"1e7184NINlM8oc454NF03lT","FluxyMaterial");cc.vmath;var r=cc.renderer.renderEngine,i=r.renderer,a=r.gfx,o=r.Material;function s(t){o.call(this,!1);var e=new i.Pass("fluxy");e.setDepth(!1,!1),e.setCullMode(a.CULL_NONE),e.setBlend(a.BLEND_FUNC_ADD,a.BLEND_SRC_ALPHA,a.BLEND_ONE_MINUS_SRC_ALPHA,a.BLEND_FUNC_ADD,a.BLEND_SRC_ALPHA,a.BLEND_ONE_MINUS_SRC_ALPHA);var n=new i.Technique(["transparent"],[{name:"iTexture",type:i.PARAM_TEXTURE_2D},{name:"time",type:i.PARAM_FLOAT}],[e]);this._texture=null,this._effect=this.effect=new i.Effect([n],{},[]),this._mainTech=n}t("./FluxyShader"),cc.js.extend(s,o),cc.js.mixin(s.prototype,{getTexture:function(){return this._texture},setTexture:function(t){this._texture!==t&&(this._texture=t,this._texture.update({flipY:!1,mipmap:!1}),this.effect.setProperty("iTexture",t.getImpl()),this._texIds.iTexture=t.getId())},setStrength:function(t){this.effect.setProperty("light_strength",t)},setTime:function(t){this.effect.setProperty("time",t)},setRevert:function(t){this.effect.setProperty("revert",t)}}),e.exports=s,cc._RF.pop()},{"./FluxyShader":"FluxyShader"}],FluxyShader:[function(t,e,n){"use strict";cc._RF.push(e,"f0cf6JfjpRE97EuguyqqqEY","FluxyShader");var r={name:"fluxy",defines:[],vert:"\n    uniform mat4 viewProj;\n    attribute vec3 a_position;\n    attribute vec2 a_uv0;\n    varying vec2 uv0;\n    void main() {\n        vec4 pos = viewProj * vec4(a_position, 1);\n        gl_Position = pos;\n        uv0 = a_uv0;\n    }",frag:"\n    uniform float time;\n    uniform sampler2D iTexture;\n    varying vec2 uv0;\n    uniform vec4 color;\n\n    void main()\n    {\n       vec4 src_color = color * texture2D(iTexture, uv0).rgba;\n\n        float w = 0.4;       //\u5bbd\u5ea6\n        float start = abs(sin(time/1.414)); //\u4f4d\u7f6e\u51fd\u6570\n        // float start = tan(time/1.414);  \n        float strength = 3.0;   //\u6d41\u5149\u589e\u4eae\u5f3a\u5ea6   (\u8c03\u6574\u8be5\u503c\u6539\u53d8\u6d41\u5149\u7684\u589e\u4eae\u5f3a\u5ea6)\n        float offset = 0.2;      //\u504f\u79fb\u503c         (\u8c03\u6574\u8be5\u503c\u6539\u53d8\u6d41\u5149\u7684\u503e\u659c\u7a0b\u5ea6)\n        if(uv0.x < start &&  uv0.x > (start - w))\n        // if(uv0.x < (start - offset * uv0.y) &&  uv0.x > (start - offset * uv0.y - w))\n        {\n            // strength = 1.0 + 2.*(1.-abs(uv0.x - start + w/2.)/(w/2.)); //\u6e10\u53d8\u5f3a\u5ea6\n            strength = 1.0 + 3.*smoothstep(0.0,1.0,1.-abs(uv0.x - start + w/2.)/(w/2.)); //\u6e10\u53d8\u5f3a\u5ea6 \u4f7f\u7528smoothstep\n            vec3 result = vec3( src_color.r * strength, src_color.g *strength, src_color.b *strength);\n            gl_FragColor = vec4(result, src_color.a);\n\n        }else{\n            gl_FragColor = src_color;\n        }\n    }"};cc.game.once(cc.game.EVENT_ENGINE_INITED,function(){cc.renderer._forward._programLib.define(r.name,r.vert,r.frag,r.defines)}),e.exports=r,cc._RF.pop()},{}],LightMaterial:[function(t,e,n){"use strict";cc._RF.push(e,"e1a94X56rlHq6LSB5Yoo35x","LightMaterial");cc.vmath;var r=cc.renderer.renderEngine,i=r.renderer,a=r.gfx,o=r.Material;function s(t){o.call(this,!1);var e=new i.Pass("light");e.setDepth(!1,!1),e.setCullMode(a.CULL_NONE),e.setBlend(a.BLEND_FUNC_ADD,a.BLEND_SRC_ALPHA,a.BLEND_ONE_MINUS_SRC_ALPHA,a.BLEND_FUNC_ADD,a.BLEND_SRC_ALPHA,a.BLEND_ONE_MINUS_SRC_ALPHA);var n=new i.Technique(["transparent"],[{name:"iTexture",type:i.PARAM_TEXTURE_2D},{name:"light_strength",type:i.PARAM_FLOAT}],[e]);this._texture=null,this._effect=this.effect=new i.Effect([n],{},[]),this._mainTech=n}t("./LightShader"),cc.js.extend(s,o),cc.js.mixin(s.prototype,{getTexture:function(){return this._texture},setTexture:function(t){this._texture!==t&&(this._texture=t,this._texture.update({flipY:!1,mipmap:!1}),this.effect.setProperty("iTexture",t.getImpl()),this._texIds.iTexture=t.getId())},setStrength:function(t){this.effect.setProperty("light_strength",t)},setRevert:function(t){this.effect.setProperty("revert",t)}}),e.exports=s,cc._RF.pop()},{"./LightShader":"LightShader"}],LightShader:[function(t,e,n){"use strict";cc._RF.push(e,"07b71llaoVGnb3v2cOKtRCs","LightShader");var r={name:"light",defines:[],vert:"\n    uniform mat4 viewProj;\n    attribute vec3 a_position;\n    attribute vec2 a_uv0;\n    varying vec2 uv0;\n    void main() {\n        vec4 pos = viewProj * vec4(a_position, 1);\n        gl_Position = pos;\n        uv0 = a_uv0;\n    }",frag:"\n    uniform float light_strength;\n    uniform sampler2D iTexture;\n    uniform bool revert;\n    varying vec2 uv0;\n\n    void main()\n    {\n        vec4 src_color = texture2D(iTexture, uv0).rgba;\n        float strength = light_strength;\n        vec3 result = vec3(src_color.r * strength, src_color.g * strength, src_color.b * strength);\n        gl_FragColor = vec4(result, src_color.a);\n    }"};cc.game.once(cc.game.EVENT_ENGINE_INITED,function(){cc.renderer._forward._programLib.define(r.name,r.vert,r.frag,r.defines)}),e.exports=r,cc._RF.pop()},{}],RainMaterial:[function(t,e,n){"use strict";cc._RF.push(e,"28ee1m1vn5Mo4klIraOaxbw","RainMaterial");var r=cc.vmath,i=cc.renderer.renderEngine,a=i.renderer,o=i.gfx,s=i.Material;function c(){s.call(this,!1);var t=new a.Pass("rain");t.setDepth(!1,!1),t.setCullMode(o.CULL_NONE),t.setBlend(o.BLEND_FUNC_ADD,o.BLEND_SRC_ALPHA,o.BLEND_ONE_MINUS_SRC_ALPHA,o.BLEND_FUNC_ADD,o.BLEND_SRC_ALPHA,o.BLEND_ONE_MINUS_SRC_ALPHA);var e=new a.Technique(["transparent"],[{name:"iTexture",type:a.PARAM_TEXTURE_2D},{name:"texSize",type:a.PARAM_FLOAT2},{name:"iResolution",type:a.PARAM_FLOAT3},{name:"iTime",type:a.PARAM_FLOAT}],[t]);this._texture=null,this._resolution=r.vec3.create(),this._texSize=r.vec2.create(),this._time=0,this._effect=this.effect=new a.Effect([e],{iResolution:this._resolution,texSize:this._texSize},[{name:"HAS_HEART",value:!0},{name:"USE_POST_PROCESSING",value:!0}]),this._mainTech=e}t("RainShader"),cc.js.extend(c,s),cc.js.mixin(c.prototype,{getTexture:function(){return this._texture},setTexture:function(t){this._texture!==t&&(this._texture=t,this._texture.update({flipY:!0,mipmap:!0}),this.effect.setProperty("iTexture",t.getImpl()),this._texIds.iTexture=t.getId(),this._texSize.x=this._texture.width,this._texSize.y=this._texture.height)},setResolution:function(t,e){this._resolution.x=t,this._resolution.y=e},setTime:function(t){this._time=t,this.effect.setProperty("iTime",this._time)},setHasHeart:function(t){this.effect.define("HAS_HEART",!!t)},usePostProcessing:function(t){this.effect.define("USE_POST_PROCESSING",!!t)}}),e.exports=c,cc._RF.pop()},{RainShader:"RainShader"}],RainShader:[function(t,e,n){"use strict";cc._RF.push(e,"7c4bfRrnQlITLZRwB5gpmjc","RainShader");var r={name:"rain",defines:[{name:"HAS_HEART"},{name:"USE_POST_PROCESSING"}],vert:"\nuniform mat4 viewProj;\nuniform mat4 model;\nattribute vec3 a_position;\nattribute vec2 a_uv0;\nvarying vec2 uv0;\nvoid main () {\n    mat4 mvp;\n    mvp = viewProj * model;\n\n    vec4 pos = mvp * vec4(a_position, 1);\n    gl_Position = pos;\n    uv0 = a_uv0;\n}\n",frag:"\n// Heartfelt - by Martijn Steinrucken aka BigWings - 2017\n// countfrolic@gmail.com\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n// I revisited the rain effect I did for another shader. This one is better in multiple ways:\n// 1. The glass gets foggy.\n// 2. Drops cut trails in the fog on the glass.\n// 3. The amount of rain is adjustable (with Mouse.y)\n\n// To have full control over the rain, uncomment the HAS_HEART define \n\n// A video of the effect can be found here:\n// https://www.youtube.com/watch?v=uiF5Tlw22PI&feature=youtu.be\n\n// Music - Alone In The Dark - Vadim Kiselev\n// https://soundcloud.com/ahmed-gado-1/sad-piano-alone-in-the-dark\n// Rain sounds:\n// https://soundcloud.com/elirtmusic/sleeping-sound-rain-and-thunder-1-hours\n\n#define S(a, b, t) smoothstep(a, b, t)\n//#define CHEAP_NORMALS\n\nuniform sampler2D iTexture;\nuniform vec3 iResolution;\nuniform float iTime;\nuniform vec2 texSize;\nvarying vec2 uv0;\n\nvec3 N13(float p) {\n    //  from DAVE HOSKINS\n   vec3 p3 = fract(vec3(p) * vec3(.1031,.11369,.13787));\n   p3 += dot(p3, p3.yzx + 19.19);\n   return fract(vec3((p3.x + p3.y)*p3.z, (p3.x+p3.z)*p3.y, (p3.y+p3.z)*p3.x));\n}\n\nvec4 N14(float t) {\n\treturn fract(sin(t*vec4(123., 1024., 1456., 264.))*vec4(6547., 345., 8799., 1564.));\n}\nfloat N(float t) {\n    return fract(sin(t*12345.564)*7658.76);\n}\n\nfloat Saw(float b, float t) {\n\treturn S(0., b, t)*S(1., b, t);\n}\n\nvec2 DropLayer2(vec2 uv, float t) {\n    vec2 UV = uv;\n    \n    uv.y += t*0.75;\n    vec2 a = vec2(6., 1.);\n    vec2 grid = a*2.;\n    vec2 id = floor(uv*grid);\n    \n    float colShift = N(id.x); \n    uv.y += colShift;\n    \n    id = floor(uv*grid);\n    vec3 n = N13(id.x*35.2+id.y*2376.1);\n    vec2 st = fract(uv*grid)-vec2(.5, 0);\n    \n    float x = n.x-.5;\n    \n    float y = UV.y*20.;\n    float wiggle = sin(y+sin(y));\n    x += wiggle*(.5-abs(x))*(n.z-.5);\n    x *= .7;\n    float ti = fract(t+n.z);\n    y = (Saw(.85, ti)-.5)*.9+.5;\n    vec2 p = vec2(x, y);\n    \n    float d = length((st-p)*a.yx);\n    \n    float mainDrop = S(.4, .0, d);\n    \n    float r = sqrt(S(1., y, st.y));\n    float cd = abs(st.x-x);\n    float trail = S(.23*r, .15*r*r, cd);\n    float trailFront = S(-.02, .02, st.y-y);\n    trail *= trailFront*r*r;\n    \n    y = UV.y;\n    float trail2 = S(.2*r, .0, cd);\n    float droplets = max(0., (sin(y*(1.-y)*120.)-st.y))*trail2*trailFront*n.z;\n    y = fract(y*10.)+(st.y-.5);\n    float dd = length(st-vec2(x, y));\n    droplets = S(.3, 0., dd);\n    float m = mainDrop+droplets*r*trailFront;\n    \n    //m += st.x>a.y*.45 || st.y>a.x*.165 ? 1.2 : 0.;\n    return vec2(m, trail);\n}\n\nfloat StaticDrops(vec2 uv, float t) {\n\tuv *= 40.;\n    \n    vec2 id = floor(uv);\n    uv = fract(uv)-.5;\n    vec3 n = N13(id.x*107.45+id.y*3543.654);\n    vec2 p = (n.xy-.5)*.7;\n    float d = length(uv-p);\n    \n    float fade = Saw(.025, fract(t+n.z));\n    float c = S(.3, 0., d)*fract(n.z*10.)*fade;\n    return c;\n}\n\nvec2 Drops(vec2 uv, float t, float l0, float l1, float l2) {\n    float s = StaticDrops(uv, t)*l0; \n    vec2 m1 = DropLayer2(uv, t)*l1;\n    vec2 m2 = DropLayer2(uv*1.85, t)*l2;\n    \n    float c = s+m1.x+m2.x;\n    c = S(.3, 1., c);\n    \n    return vec2(c, max(m1.y*l0, m2.y*l1));\n}\n\nvoid main()\n{\n    vec4 iMouse = vec4(0.0, 0.0, 0.0, 0.0);\n    vec2 fragCoord = vec2(uv0.x * texSize.x - 0.5 * texSize.x, 0.5 * texSize.y - uv0.y * texSize.y);\n\n\tvec2 uv = fragCoord.xy / iResolution.y;\n    vec2 UV = (fragCoord.xy+.5*iResolution.xy) / iResolution.xy;\n    vec3 M = iMouse.xyz/iResolution.xyz;\n    float T = iTime+M.x*2.;\n    \n    #ifdef HAS_HEART\n        T = mod(iTime, 102.);\n        T = mix(T, M.x*102., M.z>0.?1.:0.);\n    #endif\n    \n    float t = T*.2;\n    \n    float rainAmount = iMouse.z>0. ? M.y : sin(T*.05)*.3+.7;\n    \n    float maxBlur = mix(3., 6., rainAmount);\n    float minBlur = 2.;\n    \n    float story = 0.;\n    float heart = 0.;\n    \n    #ifdef HAS_HEART\n        story = S(0., 70., T);\n        \n        t = min(1., T/70.);\t\t\t\t\t\t// remap drop time so it goes slower when it freezes\n        t = 1.-t;\n        t = (1.-t*t)*70.;\n        \n        float zoom= mix(.3, 1.2, story);\t\t// slowly zoom out\n        uv *=zoom;\n        minBlur = 4.+S(.5, 1., story)*3.;\t\t// more opaque glass towards the end\n        maxBlur = 6.+S(.5, 1., story)*1.5;\n        \n        vec2 hv = uv-vec2(.0, -.1);\t\t\t\t// build heart\n        hv.x *= .5;\n        float s = S(110., 70., T);\t\t\t\t// heart gets smaller and fades towards the end\n        hv.y-=sqrt(abs(hv.x))*.5*s;\n        heart = length(hv);\n        heart = S(.4*s, .2*s, heart)*s;\n        rainAmount = heart;\t\t\t\t\t\t// the rain is where the heart is\n        \n        maxBlur-=heart;\t\t\t\t\t\t\t// inside the heart slighly less foggy\n        uv *= 1.5;\t\t\t\t\t\t\t\t// zoom out a bit more\n        t *= .25;\n    #else\n        float zoom = -cos(T*.2);\n        uv *= .7+zoom*.3;\n    #endif\n    UV = (UV-.5)*(.9+zoom*.1)+.5;\n    \n    float staticDrops = S(-.5, 1., rainAmount)*2.;\n    float layer1 = S(.25, .75, rainAmount);\n    float layer2 = S(.0, .5, rainAmount);\n    \n    vec2 c = Drops(uv, t, staticDrops, layer1, layer2);\n    #ifdef CHEAP_NORMALS\n    \tvec2 n = vec2(dFdx(c.x), dFdy(c.x));// cheap normals (3x cheaper, but 2 times shittier ;))\n    #else\n    \tvec2 e = vec2(.001, 0.);\n    \tfloat cx = Drops(uv+e, t, staticDrops, layer1, layer2).x;\n    \tfloat cy = Drops(uv+e.yx, t, staticDrops, layer1, layer2).x;\n    \tvec2 n = vec2(cx-c.x, cy-c.x);\t\t// expensive normals\n    #endif\n\n    #ifdef HAS_HEART\n        n *= 1.-S(60., 85., T);\n        c.y *= 1.-S(80., 100., T)*.8;\n    #endif\n\n    float focus = mix(maxBlur-c.y, minBlur, S(.1, .2, c.x));\n    vec3 col = texture2D(iTexture, UV+n).rgb;\n\n    #ifdef USE_POST_PROCESSING\n        t = (T+3.)*.5;\t\t\t\t\t\t\t\t\t\t// make time sync with first lightnoing\n        float colFade = sin(t*.2)*.5+.5+story;\n        col *= mix(vec3(1.), vec3(.8, .9, 1.3), colFade);\t// subtle color shift\n        float fade = S(0., 10., T);\t\t\t\t\t\t\t// fade in at the start\n        float lightning = sin(t*sin(t*10.));\t\t\t\t// lighting flicker\n        lightning *= pow(max(0., sin(t+sin(t))), 10.);\t\t// lightning flash\n        col *= 1.+lightning*fade*mix(1., .1, story*story);\t// composite lightning\n        col *= 1.-dot(UV-=.5, UV);\t\t\t\t\t\t\t// vignette\n\n        #ifdef HAS_HEART\n            col = mix(pow(col, vec3(1.2)), col, heart);\n            fade *= S(102., 97., T);\n        #endif\n\n        col *= fade;\t\t\t\t\t\t\t\t\t\t// composite start and end fade\n    #endif\n\n    //col = vec3(heart);\n    gl_FragColor = vec4(col, 1.);\n}\n"};cc.game.once(cc.game.EVENT_ENGINE_INITED,function(){cc.renderer._forward._programLib.define(r.name,r.vert,r.frag,r.defines)}),e.exports=r,cc._RF.pop()},{}],TestMaterial:[function(t,e,n){"use strict";cc._RF.push(e,"f551eycpcNE47JWMPSAOWYH","TestMaterial");var r=cc.vmath,i=cc.renderer.renderEngine,a=i.renderer,o=i.gfx,s=i.Material;function c(){s.call(this,!1);var t=new a.Pass("test");t.setDepth(!1,!1),t.setCullMode(o.CULL_NONE),t.setBlend(o.BLEND_FUNC_ADD,o.BLEND_SRC_ALPHA,o.BLEND_ONE_MINUS_SRC_ALPHA,o.BLEND_FUNC_ADD,o.BLEND_SRC_ALPHA,o.BLEND_ONE_MINUS_SRC_ALPHA);var e=new a.Technique(["transparent"],[{name:"iTexture",type:a.PARAM_TEXTURE_2D},{name:"iResolution",type:a.PARAM_FLOAT3},{name:"time",type:a.PARAM_FLOAT},{name:"u_mouse",type:a.PARAM_FLOAT2}],[t]);this._texture=null,this._resolution=r.vec3.create(),this._effect=this.effect=new a.Effect([e],{iResolution:this._resolution},[]),this._mainTech=e}t("./shaping"),cc.js.extend(c,s),cc.js.mixin(c.prototype,{getTexture:function(){return this._texture},setTexture:function(t){this._texture!==t&&(this._texture=t,this._texture.update({flipY:!1,mipmap:!1}),this.effect.setProperty("iTexture",t.getImpl()),this._texIds.iTexture=t.getId())},setTime:function(t){this.effect.setProperty("time",t)},setResolution:function(t,e){cc.log(t,e),this._resolution.x=t,this._resolution.y=e},setPosition:function(t){var e=r.vec2.create();e.x=t.x,e.y=t.y,this.effect.setProperty("u_mouse",e)}}),e.exports=c,cc._RF.pop()},{"./shaping":"shaping"}],TestShader:[function(t,e,n){"use strict";cc._RF.push(e,"b2f53lGKjZMY4EXCPrveO+Q","TestShader");var r={name:"test",defines:[],vert:"\n    uniform mat4 viewProj;\n    attribute vec3 a_position;\n    attribute vec2 a_uv0;\n    varying vec2 uv0;\n    void main() {\n        vec4 pos = viewProj * vec4(a_position, 1);\n        gl_Position = pos;\n        uv0 = a_uv0;\n    }",frag:"\n    // Plot a line on Y using a value between 0.0-1.0\n    float plot(vec2 st, float pct){\n    return  smoothstep( pct-0.02, pct, st.y) -\n            smoothstep( pct, pct+0.02, st.y);\n    }\n\n    "};cc.game.once(cc.game.EVENT_ENGINE_INITED,function(){cc.renderer._forward._programLib.define(r.name,r.vert,r.frag,r.defines)}),e.exports=r,cc._RF.pop()},{}],ThunderMaterial:[function(t,e,n){"use strict";cc._RF.push(e,"746be4RNx1Ph6IfY/5GVxF/","ThunderMaterial");cc.vmath;var r=cc.renderer.renderEngine,i=r.renderer,a=r.gfx,o=r.Material;function s(){o.call(this,!1);var t=new i.Pass("thunder");t.setDepth(!1,!1),t.setCullMode(a.CULL_NONE),t.setBlend(a.BLEND_FUNC_ADD,a.BLEND_SRC_ALPHA,a.BLEND_ONE_MINUS_SRC_ALPHA,a.BLEND_FUNC_ADD,a.BLEND_SRC_ALPHA,a.BLEND_ONE_MINUS_SRC_ALPHA);var e=new i.Technique(["transparent"],[{name:"iTexture",type:i.PARAM_TEXTURE_2D},{name:"time",type:i.PARAM_FLOAT}],[t]);this._texture=null,this._effect=this.effect=new i.Effect([e],{},[]),this._mainTech=e}t("./ThunderShader"),cc.js.extend(s,o),cc.js.mixin(s.prototype,{getTexture:function(){return this._texture},setTexture:function(t){this._texture!==t&&(this._texture=t,this._texture.update({flipY:!1,mipmap:!1}),this.effect.setProperty("iTexture",t.getImpl()),this._texIds.iTexture=t.getId())},setTime:function(t){this.effect.setProperty("time",t)}}),e.exports=s,cc._RF.pop()},{"./ThunderShader":"ThunderShader"}],ThunderShader:[function(t,e,n){"use strict";cc._RF.push(e,"6971f7/yG9DyLKbQj1/wcan","ThunderShader");var r={name:"thunder",defines:[],vert:"\n    uniform mat4 viewProj;\n    attribute vec3 a_position;\n    attribute vec2 a_uv0;\n    varying vec2 uv0;\n    void main() {\n        vec4 pos = viewProj * vec4(a_position, 1);\n        gl_Position = pos;\n        uv0 = a_uv0;\n    }",frag:"\n    uniform float time;\n    uniform sampler2D iTexture;\n    varying vec2 uv0;\n    uniform vec4 color;\n\n    // \u4f2a\u968f\u673a\n    float random (float n) {\n        return fract(sin(n)*1000000.);\n    }\n    float randomPix(float x,float y){\n        return fract(cos(x * (12.9898) + y * (4.1414)) * 43758.5453);\n    }\n    void main()\n    {\n       vec4 src_color = color * texture2D(iTexture, uv0).rgba;\n        float r = 0.8;       //\u534a\u5f84\n        // float start = tan(time/1.414);  // tan\u51fd\u6570  -> \u91cd\u590d\n        // float start = abs(sin(time/1.414)); //sin -> <-\u5f80\u590d \n        float start = 0.5;  // tan\u51fd\u6570  -> \u91cd\u590d\n\n        float shouldStartLight = sin(time);\n        float rand = random(time);\n        float strength = 3.0;   //\u4e2d\u5fc3\u4eae\u5ea6\u589e\u5f3a   (\u8c03\u6574\u8be5\u503c\u6539\u53d8\u6d41\u5149\u7684\u589e\u4eae\u5f3a\u5ea6)\n\n        float dis = abs(sqrt((uv0.x - start)*(uv0.x - start) + (uv0.y - 0.5)*(uv0.y - 0.5)));\n        //\u524d \u51b3\u5b9a\u8fde\u7eed\u51fa\u73b0\u65f6\u7684\u95f4\u9694  \u540e\u51b3\u5b9a\u95ea\u7535\u7ec4\u51fa\u73b0\u7684\u9891\u7387\u5373\u6982\u7387\n        if(rand>0.8 && shouldStartLight > (rand)){\n            if(dis<=r)\n            {\n                strength = 1. + 3.* (1.-dis/r);\n                vec3 result = vec3( src_color.r * strength, src_color.g *strength, src_color.b *strength);\n                gl_FragColor = vec4(result, src_color.a);\n            }else{\n                gl_FragColor = src_color;\n            }\n        }else{\n            gl_FragColor = src_color;\n        }\n\n    }"};cc.game.once(cc.game.EVENT_ENGINE_INITED,function(){cc.renderer._forward._programLib.define(r.name,r.vert,r.frag,r.defines)}),e.exports=r,cc._RF.pop()},{}],flux:[function(t,e,n){"use strict";cc._RF.push(e,"cf8aeiOQ2NAyYHmPmbk+Z7v","flux"),cc.Class({extends:cc.Component,properties:{},start:function(){if(this._start=Date.now(),this.target=this.getComponent(cc.Sprite),this.target&&this.target.spriteFrame){var t=this.target.spriteFrame.getTexture();this._material.setTexture(t),this._material.updateHash(Date.now()),this.target._material=this._material,this.target._renderData._material=this._material,this.autoStart&&(this._shouldRun=!0)}},onLoad:function(){cc.dynamicAtlasManager.enabled=!1;var e=t("./fluxay/FluxyMaterial");this._material=new e},update:function(t){var e=(Date.now()-this._start)/1e3;this._material.setTime(e)}}),cc._RF.pop()},{"./fluxay/FluxyMaterial":"FluxyMaterial"}],light:[function(t,e,n){"use strict";cc._RF.push(e,"5d509dPmaNIipODktD9CQP5","light"),cc.Class({extends:cc.Component,properties:{from:1,to:3,speed:1,breath:!0,autoStart:!1,isAnim:!0,delay:1},start:function(){if(this.target=this.getComponent(cc.Sprite),this.target&&this.target.spriteFrame){var t=this.target.spriteFrame.getTexture();this._material.setTexture(t),this._material.updateHash(Date.now()),this.target._material=this._material,this.target._renderData._material=this._material,this.autoStart&&this.doStart()}},onLoad:function(){this._light=this.from,cc.dynamicAtlasManager.enabled=!1;var e=t("./light/LightMaterial");this._material=new e},onEnable:function(){},doStart:function(){var t=this;this._light=this.from,this._isRunning=!0,this.from>this.to?(this._direction=-1,this._from=this.to,this._to=this.from):(this._direction=1,this._from=this.from,this._to=this.to),this.isAnim?(this._material.setStrength(this.from),this._shouldRun=!0):(this._material.setStrength(this.to),this.unscheduleAllCallbacks(),this.scheduleOnce(function(e){t._material.setStrength(t.from),t._isRunning=!1},this.delay))},doPause:function(){},doResume:function(){},doStop:function(t){this._shouldRun&&(this._shouldRun=!1,this._isRunning=!1),t&&this._material.setStrength(1),this._material.setRevert(!0)},update:function(t){if(this._isRunning){if(this.target&&this.target.spriteFrame&&this._material){var e=this.target.spriteFrame.getTexture();this._material.setTexture(e),this.target._material=this._material,this.target._renderData._material=this._material}this._shouldRun&&(this._light>=this._to&&(this._direction=-1),this._light<=this._from&&(this._direction=1),this._light+=t*this.speed*this._direction,(this._light>=this._to||this._light<=this._from)&&!this.breath?this.doStop(!1):this._material.setStrength(this._light))}}}),cc._RF.pop()},{"./light/LightMaterial":"LightMaterial"}],main:[function(t,e,n){"use strict";cc._RF.push(e,"280c3rsZJJKnZ9RqbALVwtK","main"),cc.Class({extends:cc.Component,properties:{},onLoad:function(){},update:function(t){}}),cc._RF.pop()},{}],rain:[function(t,e,n){"use strict";cc._RF.push(e,"de587Dg0DBKnqDKTMkNz08+","rain");var r=t("./rain/RainMaterial");cc.Class({extends:cc.Component,properties:{},start:function(){if(this._start=Date.now(),this.target=this.getComponent(cc.Sprite),this.target){var t=this.target.spriteFrame.getTexture();this._material.setTexture(t),this._material.setResolution(this.target.node.width,this.target.node.height),this._material.updateHash(),this.target._material=this._material,this.target._renderData._material=this._material}},onLoad:function(){cc.dynamicAtlasManager.enabled=!1,this._material=new r},onEnable:function(){},update:function(t){var e=(Date.now()-this._start)/1e3;this._material.setTime(e)}}),cc._RF.pop()},{"./rain/RainMaterial":"RainMaterial"}],shaping:[function(t,e,n){"use strict";cc._RF.push(e,"a5199u9N9dL/6pbHOvwweGM","shaping");var r={name:"test",defines:[],vert:"\n   \n    uniform mat4 viewProj;\n    attribute vec3 a_position;\n    attribute vec2 a_uv0;\n    varying vec2 uv0;\n    void main() {\n        vec4 pos = viewProj * vec4(a_position, 1);\n        gl_Position = pos;\n        uv0 = a_uv0;\n    }",frag:"\n     \n    #define PI 3.141592653589793\n    #define HALF_PI 1.5707963267948966\n    #define TWO_PI 6.28318530718\n    // Plot a line on Y using a value between 0.0-1.0\n    uniform float time;\n    uniform sampler2D iTexture;\n    uniform vec3 iResolution;\n    uniform vec4 color;\n    varying vec2 uv0;\n    float plot(vec2 st, float pct){\n        return  smoothstep( pct-0.02, pct, 1.-st.y) - smoothstep( pct, pct+0.02, 1.-st.y);\n    }\n    float linear(float t) {\n        return t;\n    }\n\n    float exponentialIn(float t) {\n  return t == 0.0 ? t : pow(2.0, 10.0 * (t - 1.0));\n}\n\nfloat exponentialOut(float t) {\n  return t == 1.0 ? t : 1.0 - pow(2.0, -10.0 * t);\n}\n\nfloat exponentialInOut(float t) {\n  return t == 0.0 || t == 1.0\n    ? t\n    : t < 0.5\n      ? +0.5 * pow(2.0, (20.0 * t) - 10.0)\n      : -0.5 * pow(2.0, 10.0 - (t * 20.0)) + 1.0;\n}\n\nfloat sineIn(float t) {\n  return sin((t - 1.0) * HALF_PI) + 1.0;\n}\n\nfloat sineOut(float t) {\n  return sin(t * HALF_PI);\n}\n\nfloat sineInOut(float t) {\n  return -0.5 * (cos(PI * t) - 1.0);\n}\n\nfloat qinticIn(float t) {\n  return pow(t, 5.0);\n}\n\nfloat qinticOut(float t) {\n  return 1.0 - (pow(t - 1.0, 5.0));\n}\n\nfloat qinticInOut(float t) {\n  return t < 0.5\n    ? +16.0 * pow(t, 5.0)\n    : -0.5 * pow(2.0 * t - 2.0, 5.0) + 1.0;\n}\n\nfloat quarticIn(float t) {\n  return pow(t, 4.0);\n}\n\nfloat quarticOut(float t) {\n  return pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\n}\n\nfloat quarticInOut(float t) {\n  return t < 0.5\n    ? +8.0 * pow(t, 4.0)\n    : -8.0 * pow(t - 1.0, 4.0) + 1.0;\n}\n\nfloat quadraticInOut(float t) {\n  float p = 2.0 * t * t;\n  return t < 0.5 ? p : -p + (4.0 * t) - 1.0;\n}\n\nfloat quadraticIn(float t) {\n  return t * t;\n}\n\nfloat quadraticOut(float t) {\n  return -t * (t - 2.0);\n}\n\nfloat cubicIn(float t) {\n  return t * t * t;\n}\n\nfloat cubicOut(float t) {\n  float f = t - 1.0;\n  return f * f * f + 1.0;\n}\n\nfloat cubicInOut(float t) {\n  return t < 0.5\n    ? 4.0 * t * t * t\n    : 0.5 * pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\n\nfloat elasticIn(float t) {\n  return sin(13.0 * t * HALF_PI) * pow(2.0, 10.0 * (t - 1.0));\n}\n\nfloat elasticOut(float t) {\n  return sin(-13.0 * (t + 1.0) * HALF_PI) * pow(2.0, -10.0 * t) + 1.0;\n}\n\nfloat elasticInOut(float t) {\n  return t < 0.5\n    ? 0.5 * sin(+13.0 * HALF_PI * 2.0 * t) * pow(2.0, 10.0 * (2.0 * t - 1.0))\n    : 0.5 * sin(-13.0 * HALF_PI * ((2.0 * t - 1.0) + 1.0)) * pow(2.0, -10.0 * (2.0 * t - 1.0)) + 1.0;\n}\n\nfloat circularIn(float t) {\n  return 1.0 - sqrt(1.0 - t * t);\n}\n\nfloat circularOut(float t) {\n  return sqrt((2.0 - t) * t);\n}\n\nfloat circularInOut(float t) {\n  return t < 0.5\n    ? 0.5 * (1.0 - sqrt(1.0 - 4.0 * t * t))\n    : 0.5 * (sqrt((3.0 - 2.0 * t) * (2.0 * t - 1.0)) + 1.0);\n}\n\nfloat bounceOut(float t) {\n  const float a = 4.0 / 11.0;\n  const float b = 8.0 / 11.0;\n  const float c = 9.0 / 10.0;\n\n  const float ca = 4356.0 / 361.0;\n  const float cb = 35442.0 / 1805.0;\n  const float cc = 16061.0 / 1805.0;\n\n  float t2 = t * t;\n\n  return t < a\n    ? 7.5625 * t2\n    : t < b\n      ? 9.075 * t2 - 9.9 * t + 3.4\n      : t < c\n        ? ca * t2 - cb * t + cc\n        : 10.8 * t * t - 20.52 * t + 10.72;\n}\n\nfloat bounceIn(float t) {\n  return 1.0 - bounceOut(1.0 - t);\n}\n\nfloat bounceInOut(float t) {\n  return t < 0.5\n    ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0))\n    : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\n}\n\nfloat backIn(float t) {\n  return pow(t, 3.0) - t * sin(t * PI);\n}\n\nfloat backOut(float t) {\n  float f = 1.0 - t;\n  return 1.0 - (pow(f, 3.0) - f * sin(f * PI));\n}\n\nfloat backInOut(float t) {\n  float f = t < 0.5\n    ? 2.0 * t\n    : 1.0 - (2.0 * t - 1.0);\n\n  float g = pow(f, 3.0) - f * sin(f * PI);\n\n  return t < 0.5\n    ? 0.5 * g\n    : 0.5 * (1.0 - g) + 0.5;\n}\n\n\nvec3 rgb2hsb( in vec3 c ){\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n    vec4 p = mix(vec4(c.bg, K.wz),\n                 vec4(c.gb, K.xy),\n                 step(c.b, c.g));\n    vec4 q = mix(vec4(p.xyw, c.r),\n                 vec4(c.r, p.yzx),\n                 step(p.x, c.r));\n    float d = q.x - min(q.w, q.y);\n    float e = 1.0e-10;\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)),\n                d / (q.x + e),\n                q.x);\n}\n\n//  Function from I\xf1igo Quiles\n//  https://www.shadertoy.com/view/MsS3Wc\nvec3 hsb2rgb( in vec3 c ){\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),\n                             6.0)-3.0)-1.0,\n                     0.0,\n                     1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return c.z * mix(vec3(1.0), rgb, c.y);\n}\n\n    void main(){\n        // float y = bounceIn(time + uv0.x);//(uv0.x);\n        // vec3 color = vec3(0.,y,y);  //\u80cc\u666f\u8272\u6839\u636e\u51fd\u6570\u503c\u8c03\u6574\u8272\u503c\n \n        // // Plot a line\n        // float pct = plot(uv0,y);\n        // //\u6392\u9664\u7ebf\u7684\u90e8\u5206 \u8d4b\u503c\u4e3a\u80cc\u666f\u8272\n        // color =(1.-pct) * color + pct*vec3(0.0,1.0,0.0);\n        //  vec3 color = vec3(0.0);\n\n        // We map x (0.0 - 1.0) to the hue (0.0 - 1.0)\n        // And the y (0.0 - 1.0) to the brightness\n        // color = hsb2rgb(vec3(uv0.x,1.0,uv0.y));\n\n    vec2 st = uv0;//gl_FragCoord.xy/u_resolution;\n    // vec3 color = vec3(0.0);\n\n    // // Use polar coordinates instead of cartesian\n    // vec2 toCenter = vec2(0.5)-st;\n    // float angle = atan(toCenter.y,toCenter.x);\n    // float radius = length(toCenter)*2.0;\n\n    // // Map the angle (-PI to PI) to the Hue (from 0 to 1)\n    // // and the Saturation to the radius\n    // color = hsb2rgb(vec3((angle/TWO_PI)+0.5,radius,1.0));\n\n\n    vec3 color = vec3(0.0);\n    float left = step(0.1,st.x);   // Similar to ( X greater than 0.1 )\n    float bottom = step(0.1,st.y); // Similar to ( Y greater than 0.1 )\n\n    // The multiplication of left*bottom will be similar to the logical AND.\n    color = vec3( left ) * vec3(bottom);\n\n    gl_FragColor = vec4(color,1.0);\n\n        gl_FragColor = vec4(color,1.0);\n    }\n    "};cc.game.once(cc.game.EVENT_ENGINE_INITED,function(){cc.renderer._forward._programLib.define(r.name,r.vert,r.frag,r.defines)}),e.exports=r,cc._RF.pop()},{}],test:[function(t,e,n){"use strict";cc._RF.push(e,"770d5pnvu5D9aw3Wb52W/Jx","test"),cc.Class({extends:cc.Component,properties:{},start:function(){if(this._start=Date.now(),this.target=this.getComponent(cc.Sprite),this.target&&this.target.spriteFrame){var t=this.target.spriteFrame.getTexture();this._material.setTexture(t),this._material.setResolution(this.target.node.width,this.target.node.height),this._material.updateHash(Date.now()),this.target._material=this._material,this.target._renderData._material=this._material,this.autoStart&&(this._shouldRun=!0)}},onLoad:function(){var e=this;cc.dynamicAtlasManager.enabled=!1;var n=t("./test/TestMaterial");this._material=new n,this.node.on(cc.Node.EventType.MOUSE_MOVE,function(t){var n=e.node.convertToNodeSpaceAR(t.getLocation());e._material.setPosition({x:-n.x/e.node.width,y:n.y/e.node.height})})},update:function(t){var e=(Date.now()-this._start)/1e3;this._material.setTime(e)}}),cc._RF.pop()},{"./test/TestMaterial":"TestMaterial"}],thunder:[function(t,e,n){"use strict";cc._RF.push(e,"b9492acG2ZJbbWAUMoCpa0E","thunder"),cc.Class({extends:cc.Component,properties:{},start:function(){if(this._start=Date.now(),this.target=this.getComponent(cc.Sprite),this.target&&this.target.spriteFrame){var t=this.target.spriteFrame.getTexture();this._material.setTexture(t),this._material.updateHash(Date.now()),this.target._material=this._material,this.target._renderData._material=this._material,this.autoStart&&(this._shouldRun=!0)}},onLoad:function(){cc.dynamicAtlasManager.enabled=!1;var e=t("./thunder/ThunderMaterial");this._material=new e},update:function(t){var e=(Date.now()-this._start)/1e3;this._material.setTime(e)}}),cc._RF.pop()},{"./thunder/ThunderMaterial":"ThunderMaterial"}]},{},["main","flux","FluxyMaterial","FluxyShader","light","LightMaterial","LightShader","rain","RainMaterial","RainShader","test","TestMaterial","TestShader","shaping","thunder","ThunderMaterial","ThunderShader"]);